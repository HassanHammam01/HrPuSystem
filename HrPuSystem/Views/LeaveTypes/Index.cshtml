@model PaginatedList<HrPuSystem.Models.LeaveType>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Leave Types";
    var isAdmin = User.IsInRole("Admin");
    var filter = ViewBag.Filter as HrPuSystem.Models.Filters.LeaveTypeFilter ?? new
    HrPuSystem.Models.Filters.LeaveTypeFilter();
}

<div class="d-flex flex-column gap-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="h3 mb-1">Leave Types</h1>
            <p class="text-secondary mb-0">Manage available leave types for your organization</p>
        </div>
        @if (isAdmin)
        {
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-lg me-2"></i>Add Leave Type
            </a>
        }
    </div>

    <!-- Filters -->
    <div class="card">
        <div class="card-body py-2">
            <form method="get" class="d-flex gap-3 align-items-end">
                <div style="min-width: 200px;">
                    <label class="form-label small mb-1">Name</label>
                    <input type="text" name="Name" class="form-control form-control-sm" value="@filter.Name" />
                </div>
                <div style="min-width: 150px;">
                    <label class="form-label small mb-1">Type</label>
                    <select name="IsPaid" class="form-select form-select-sm">
                        <option value="">All Types</option>
                        <option value="true" selected="@(filter.IsPaid == true)">Paid</option>
                        <option value="false" selected="@(filter.IsPaid == false)">Unpaid</option>
                    </select>
                </div>
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary btn-sm">
                        <i class="bi bi-filter me-1"></i>Filter
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                        <i class="bi bi-x-circle me-1"></i>Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th class="ps-4">Leave Type</th>
                        <th class="text-center">Default Days</th>
                        <th class="text-center">Status</th>
                        <th class="text-end pe-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ps-4">
                                <div class="d-flex align-items-center">
                                    <div class="avatar-circle bg-primary bg-opacity-10 text-primary me-3">
                                        <i class="bi bi-calendar2-week"></i>
                                    </div>
                                    <div>
                                        <div class="fw-medium">@item.Name</div>
                                        <div class="small text-secondary">ID: @item.LeaveTypeId</div>
                                    </div>
                                </div>
                            </td>
                            <td class="text-center">
                                <span class="badge bg-info-subtle text-info rounded-pill">
                                    @item.DefaultDays days
                                </span>
                            </td>
                            <td class="text-center">
                                @if (item.IsPaid)
                                {
                                    <span class="badge bg-success-subtle text-success rounded-pill">
                                        <i class="bi bi-currency-dollar me-1"></i>Paid
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-danger-subtle text-danger rounded-pill">
                                        <i class="bi bi-dash-circle me-1"></i>Unpaid
                                    </span>
                                }
                            </td>
                            <td class="text-end pe-4">
                                <div class="btn-group">
                                    <a asp-action="Edit" asp-route-id="@item.LeaveTypeId"
                                        class="btn btn-sm btn-outline-primary" title="Edit">
                                        <i class="bi bi-pencil"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@item.LeaveTypeId"
                                        class="btn btn-sm btn-outline-secondary" title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                    @if (isAdmin)
                                    {
                                        <button type="button" class="btn btn-sm btn-outline-danger" title="Delete"
                                            onclick="confirmDelete(@item.LeaveTypeId)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.TotalPages > 1)
        {
            <div class="card-footer d-flex justify-content-between align-items-center">
                <div class="text-muted small">
                    Showing @((Model.PageIndex - 1) * filter.PageSize + 1) to @(Math.Min(Model.PageIndex * filter.PageSize,
                    Model.TotalItems)) of @Model.TotalItems items
            </div>
            <nav aria-label="Page navigation">
                <ul class="pagination pagination-sm mb-0">
                    <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
                            asp-route-name="@filter.Name" asp-route-isPaid="@filter.IsPaid">Previous</a>
                    </li>
                    @for (var i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-name="@filter.Name"
                                    asp-route-isPaid="@filter.IsPaid">@i</a>
                            </li>
                        }
                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
                                asp-route-name="@filter.Name" asp-route-isPaid="@filter.IsPaid">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        font-size: 1.125rem;
    }

    .btn-group .btn {
        padding: 0.375rem 0.5rem;
    }

    .badge {
        font-weight: 500;
    }
</style>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Are you sure you want to delete this leave type?')) {
                window.location.href = '@Url.Action("Delete")/' + id;
            }
        }
    </script>
}
