@model PaginatedList<HrPuSystem.Models.LeaveRecord>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Leave Records";
    var isAdmin = User.IsInRole("Admin");
    var filter = ViewBag.Filter as HrPuSystem.Models.Filters.LeaveRecordFilter ?? new
    HrPuSystem.Models.Filters.LeaveRecordFilter();
}

<div class="d-flex flex-column gap-4">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="h3 mb-1">Leave Records</h1>
            <p class="text-secondary mb-0">Manage employee leave requests</p>
        </div>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg me-2"></i>New Leave Request
        </a>
    </div>

    <!-- Filters -->
    <div class="card">
        <div class="card-body py-2">
            <form method="get" class="d-flex gap-3 align-items-end">
                <div style="min-width: 200px;">
                    <label class="form-label small mb-1">Employee Name</label>
                    <input type="text" name="EmployeeName" class="form-control form-control-sm"
                        value="@filter.EmployeeName" />
                </div>
                <div style="min-width: 150px;">
                    <label class="form-label small mb-1">Leave Type</label>
                    <select name="LeaveTypeId" class="form-select form-select-sm">
                        <option value="">All Types</option>
                        @foreach (var type in ViewBag.LeaveTypes)
                        {
                            <option value="@type.LeaveTypeId" selected="@(filter.LeaveTypeId == type.LeaveTypeId)">
                                @type.Name
                            </option>
                        }
                    </select>
                </div>
                <div>
                    <label class="form-label small mb-1">Start Date</label>
                    <input type="date" name="StartDate" class="form-control form-control-sm"
                        value="@(filter.StartDate?.ToString("yyyy-MM-dd"))" />
                </div>
                <div>
                    <label class="form-label small mb-1">End Date</label>
                    <input type="date" name="EndDate" class="form-control form-control-sm"
                        value="@(filter.EndDate?.ToString("yyyy-MM-dd"))" />
                </div>
                <div style="min-width: 120px;">
                    <label class="form-label small mb-1">Status</label>
                    <select name="Status" class="form-select form-select-sm">
                        <option value="">All Status</option>
                        <option value="approved" selected="@(filter.Status == "approved")">Approved</option>
                        <option value="pending" selected="@(filter.Status == "pending")">Pending</option>
                    </select>
                </div>
                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-primary btn-sm">
                        <i class="bi bi-filter me-1"></i>Filter
                    </button>
                    <a asp-action="Index" class="btn btn-outline-secondary btn-sm">
                        <i class="bi bi-x-circle me-1"></i>Clear
                    </a>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead>
                    <tr>
                        <th class="ps-4">
                            <a href="@Url.Action("Index", new { filter.EmployeeName, filter.LeaveTypeId, filter.StartDate, filter.EndDate, filter.Status, SortBy = "EmployeeName", SortDescending = filter.SortBy == "EmployeeName" ? !filter.SortDescending : true })" class="text-dark text-decoration-none">
                                Employee
                                @if (filter.SortBy?.ToLower() == "employeename")
                                {
                                    <i class="bi @(filter.SortDescending ? "bi-sort-down" : "bi-sort-up")"></i>
                                }
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index", new { filter.EmployeeName, filter.LeaveTypeId, filter.StartDate, filter.EndDate, filter.Status, SortBy = "LeaveType", SortDescending = filter.SortBy == "LeaveType" ? !filter.SortDescending : true })" class="text-dark text-decoration-none">
                                Leave Type
                                @if (filter.SortBy?.ToLower() == "leavetype")
                                {
                                    <i class="bi @(filter.SortDescending ? "bi-sort-down" : "bi-sort-up")"></i>
                                }
                            </a>
                        </th>
                        <th>
                            <a href="@Url.Action("Index", new { filter.EmployeeName, filter.LeaveTypeId, filter.StartDate, filter.EndDate, filter.Status, SortBy = "Duration", SortDescending = filter.SortBy == "Duration" ? !filter.SortDescending : true })" class="text-dark text-decoration-none">
                                Duration
                                @if (filter.SortBy?.ToLower() == "duration")
                                {
                                    <i class="bi @(filter.SortDescending ? "bi-sort-down" : "bi-sort-up")"></i>
                                }
                            </a>
                        </th>
                        <th class="text-center">
                            <a href="@Url.Action("Index", new { filter.EmployeeName, filter.LeaveTypeId, filter.StartDate, filter.EndDate, filter.Status, SortBy = "Status", SortDescending = filter.SortBy == "Status" ? !filter.SortDescending : true })" class="text-dark text-decoration-none">
                                Status
                                @if (filter.SortBy?.ToLower() == "status")
                                {
                                    <i class="bi @(filter.SortDescending ? "bi-sort-down" : "bi-sort-up")"></i>
                                }
                            </a>
                        </th>
                        <th class="text-end pe-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td class="ps-4">
                                <div class="d-flex align-items-center">
                                    @* <div class="avatar-circle bg-primary bg-opacity-10 text-primary me-3">
                                        @item.Employee.FullName.Substring(0, 1).ToUpper()
                                    </div> *@
                                    <div>
                                        <div class="fw-medium">@item.Employee.FullName</div>
                                        <div class="small text-secondary">@item.Employee.Email</div>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <i class="bi bi-calendar2-week text-secondary me-2"></i>
                                    <span>@item.LeaveType.Name</span>
                                </div>
                            </td>
                            <td>
                                <div class="d-flex flex-column">
                                    <div class="small text-secondary">From: @item.StartDate.ToString("MMM dd, yyyy")</div>
                                    <div class="small text-secondary">To: @item.EndDate.ToString("MMM dd, yyyy")</div>
                                    <div class="small text-primary">(@item.TotalDays days)</div>
                                </div>
                            </td>
                            <td class="text-center">
                                @if (item.Approved)
                                {
                                    <span class="badge bg-success-subtle text-success rounded-pill">
                                        <i class="bi bi-check-circle me-1"></i>Approved
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-warning-subtle text-warning rounded-pill">
                                        <i class="bi bi-clock me-1"></i>Pending
                                    </span>
                                }
                            </td>
                            <td class="text-end pe-4">
                                <div class="btn-group">
                                    @if (!item.Approved)
                                    {
                                        <form asp-action="Approve" asp-route-id="@item.LeaveRecordId" method="post"
                                            class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-sm btn-outline-success" title="Approve">
                                                <i class="bi bi-check-lg"></i>
                                            </button>
                                        </form>
                                        <a asp-action="Edit" asp-route-id="@item.LeaveRecordId"
                                            class="btn btn-sm btn-outline-primary" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger" title="Delete"
                                            onclick="confirmDelete(@item.LeaveRecordId)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                    <a asp-action="Details" asp-route-id="@item.LeaveRecordId"
                                        class="btn btn-sm btn-outline-secondary" title="View Details">
                                        <i class="bi bi-eye"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @if (Model.TotalPages > 1)
        {
            <div class="card-footer d-flex justify-content-between align-items-center">
                <div class="text-muted small">
                    Showing @((Model.PageIndex - 1) * filter.PageSize + 1) to
                    @(Math.Min(Model.PageIndex * filter.PageSize, Model.TotalItems)) of @Model.TotalItems items
                </div>
                <nav aria-label="Page navigation">
                    <ul class="pagination pagination-sm mb-0">
                        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)"
                                asp-route-employeeName="@filter.EmployeeName" asp-route-leaveTypeId="@filter.LeaveTypeId"
                                asp-route-startDate="@filter.StartDate?.ToString("yyyy-MM-dd")"
                                asp-route-endDate="@filter.EndDate?.ToString("yyyy-MM-dd")"
                                asp-route-status="@filter.Status">
                                Previous
                            </a>
                        </li>
                        @for (var i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" asp-action="Index" asp-route-pageNumber="@i"
                                    asp-route-employeeName="@filter.EmployeeName" asp-route-leaveTypeId="@filter.LeaveTypeId"
                                    asp-route-startDate="@filter.StartDate?.ToString("yyyy-MM-dd")"
                                    asp-route-endDate="@filter.EndDate?.ToString("yyyy-MM-dd")"
                                    asp-route-status="@filter.Status">
                                    @i
                                </a>
                            </li>
                        }
                        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                            <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)"
                                asp-route-employeeName="@filter.EmployeeName" asp-route-leaveTypeId="@filter.LeaveTypeId"
                                asp-route-startDate="@filter.StartDate?.ToString("yyyy-MM-dd")"
                                asp-route-endDate="@filter.EndDate?.ToString("yyyy-MM-dd")"
                                asp-route-status="@filter.Status">
                                Next
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

<style>
    .avatar-circle {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        font-size: 1.125rem;
    }

    .btn-group .btn {
        padding: 0.375rem 0.5rem;
    }

    .badge {
        font-weight: 500;
    }
</style>

@section Scripts {
    <script>
        function confirmDelete(id) {
            if (confirm('Are you sure you want to delete this leave record?')) {
                window.location.href = '@Url.Action("Delete")/' + id;
            }
        }
    </script>
}
